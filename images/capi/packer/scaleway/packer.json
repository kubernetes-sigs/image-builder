{
  "builders": [
    {
      "access_key": "{{user `access_key`}}",
      "commercial_type": "{{user `commercial_type`}}",
      "image": "{{user `image`}}",
      "image_name": "{{user `image_name`}}",
      "project_id": "{{user `project_id`}}",
      "remove_volume": true,
      "root_volume": {
        "type": "{{user `root_volume_type`}}"
      },
      "secret_key": "{{user `secret_key`}}",
      "ssh_username": "root",
      "type": "scaleway",
      "zone": "{{user `zone`}}"
    }
  ],
  "provisioners": [
    {
      "ansible_env_vars": [
        "ANSIBLE_SSH_ARGS='{{user `existing_ansible_ssh_args`}} {{user `ansible_common_ssh_args`}}'"
      ],
      "extra_arguments": [
        "--extra-vars",
        "{{user `ansible_common_vars`}}",
        "--extra-vars",
        "{{user `ansible_extra_vars`}}",
        "--extra-vars",
        "{{user `ansible_user_vars`}}",
        "--scp-extra-args",
        "{{user `ansible_scp_extra_args`}}"
      ],
      "playbook_file": "./ansible/node.yml",
      "type": "ansible"
    },
    {
      "arch": "{{user `goss_arch`}}",
      "download_path": "{{user `goss_download_path`}}",
      "format": "{{user `goss_format`}}",
      "format_options": "{{user `goss_format_options`}}",
      "goss_file": "{{user `goss_entry_file`}}",
      "inspect": "{{user `goss_inspect_mode`}}",
      "remote_folder": "{{user `goss_remote_folder`}}",
      "remote_path": "{{user `goss_remote_path`}}",
      "skip_install": "{{user `goss_skip_install`}}",
      "tests": [
        "{{user `goss_tests_dir`}}"
      ],
      "type": "goss",
      "url": "{{user `goss_url`}}",
      "use_sudo": true,
      "vars_file": "{{user `goss_vars_file`}}",
      "vars_inline": {
        "ARCH": "amd64",
        "OS": "{{user `distribution` | lower}}",
        "OS_VERSION": "{{user `distribution_version` | lower}}",
        "PROVIDER": "scaleway",
        "containerd_gvisor_runtime": "{{user `containerd_gvisor_runtime`}}",
        "containerd_gvisor_version": "{{user `containerd_gvisor_version`}}",
        "containerd_version": "{{user `containerd_version`}}",
        "kubernetes_cni_deb_version": "{{ user `kubernetes_cni_deb_version` }}",
        "kubernetes_cni_rpm_version": "{{ split (user `kubernetes_cni_rpm_version`) \"-\" 0 }}",
        "kubernetes_cni_source_type": "{{user `kubernetes_cni_source_type`}}",
        "kubernetes_cni_version": "{{user `kubernetes_cni_semver` | replace \"v\" \"\" 1}}",
        "kubernetes_deb_version": "{{ user `kubernetes_deb_version` }}",
        "kubernetes_rpm_version": "{{ split (user `kubernetes_rpm_version`) \"-\" 0 }}",
        "kubernetes_source_type": "{{user `kubernetes_source_type`}}",
        "kubernetes_version": "{{user `kubernetes_semver` | replace \"v\" \"\" 1}}"
      },
      "version": "{{user `goss_version`}}"
    }
  ],
  "variables": {
    "access_key": "{{env `SCW_ACESS_KEY`}}",
    "ansible_common_vars": "",
    "ansible_extra_vars": "",
    "ansible_scp_extra_args": "",
    "build_timestamp": "{{timestamp}}",
    "commercial_type": "DEV1-S",
    "containerd_gvisor_runtime": "false",
    "containerd_gvisor_version": "latest",
    "containerd_version": null,
    "crictl_version": null,
    "existing_ansible_ssh_args": "{{env `ANSIBLE_SSH_ARGS`}}",
    "image_name": "cluster-api-{{user `build_name`}}-{{user `kubernetes_semver`}}-{{user `build_timestamp`}}",
    "kubernetes_cni_deb_version": null,
    "kubernetes_cni_http_source": null,
    "kubernetes_cni_rpm_version": null,
    "kubernetes_cni_semver": null,
    "kubernetes_cni_source_type": null,
    "kubernetes_container_registry": null,
    "kubernetes_deb_gpg_key": null,
    "kubernetes_deb_repo": null,
    "kubernetes_deb_version": null,
    "kubernetes_http_source": null,
    "kubernetes_load_additional_imgs": null,
    "kubernetes_rpm_gpg_check": null,
    "kubernetes_rpm_gpg_key": null,
    "kubernetes_rpm_repo": null,
    "kubernetes_rpm_version": null,
    "kubernetes_semver": null,
    "kubernetes_series": null,
    "kubernetes_source_type": null,
    "project_id": "{{env `SCW_PROJECT_ID`}}",
    "root_volume_type": "sbs_volume",
    "secret_key": "{{env `SCW_SECRET_KEY`}}",
    "zone": "fr-par-1"
  }
}
